{
    "_id": "f9f0a778-b3d0-4b98-855d-f43a691e0dd9",
    "acquisition": null,
    "created": "2025-09-23T17:23:15.900349",
    "data_description": {
        "describedBy": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/data_description.py",
        "schema_version": "1.0.3",
        "license": "CC-BY-4.0",
        "platform": {
            "name": "Behavior platform",
            "abbreviation": "behavior"
        },
        "subject_id": "789911",
        "creation_time": "2025-09-23T17:06:54.833466Z",
        "label": null,
        "name": "behavior_789911_2025-07-11_19-47-52_processed_2025-09-23_17-06-54",
        "institution": {
            "name": "Allen Institute for Neural Dynamics",
            "abbreviation": "AIND",
            "registry": {
                "name": "Research Organization Registry",
                "abbreviation": "ROR"
            },
            "registry_identifier": "04szwah67"
        },
        "funding_source": [
            {
                "funder": {
                    "name": "Allen Institute",
                    "abbreviation": "AI",
                    "registry": {
                        "name": "Research Organization Registry",
                        "abbreviation": "ROR"
                    },
                    "registry_identifier": "03cpe7c52"
                },
                "grant_number": "Simons863738",
                "fundee": null
            },
            {
                "funder": {
                    "name": "Simons Foundation",
                    "abbreviation": null,
                    "registry": {
                        "name": "Research Organization Registry",
                        "abbreviation": "ROR"
                    },
                    "registry_identifier": "01cmst727"
                },
                "grant_number": "Simons863738",
                "fundee": null
            }
        ],
        "data_level": "derived",
        "group": null,
        "investigators": [
            {
                "name": "Bruno Cruz",
                "abbreviation": null,
                "registry": null,
                "registry_identifier": null
            },
            {
                "name": "Cindy Poo",
                "abbreviation": null,
                "registry": null,
                "registry_identifier": null
            },
            {
                "name": "Tiffany Ona",
                "abbreviation": null,
                "registry": null,
                "registry_identifier": null
            }
        ],
        "project_name": "Cognitive flexibility in patch foraging",
        "restrictions": null,
        "modality": [
            {
                "name": "Behavior",
                "abbreviation": "behavior"
            }
        ],
        "related_data": [],
        "data_summary": null,
        "input_data_name": "behavior_789911_2025-07-11_19-47-52",
        "process_name": "processed"
    },
    "describedBy": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/metadata.py",
    "external_links": {
        "Code Ocean": [
            "d8931e00-bde0-45d2-a7ff-2a730b25ab3b"
        ]
    },
    "instrument": null,
    "last_modified": "2025-09-23T17:23:18.978Z",
    "location": "s3://codeocean-s3datasetsbucket-1u41qdg42ur9/d8931e00-bde0-45d2-a7ff-2a730b25ab3b",
    "metadata_status": "Invalid",
    "name": "behavior_789911_2025-07-11_19-47-52_processed_2025-09-23_17-06-54",
    "procedures": {
        "describedBy": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/procedures.py",
        "notes": null,
        "schema_version": "1.1.3",
        "specimen_procedures": [],
        "subject_id": "789911",
        "subject_procedures": [
            {
                "baseline_weight": "23.56",
                "end_date": null,
                "minimum_water_per_day": "1.0",
                "minimum_water_per_day_unit": "milliliter",
                "procedure_type": "Water restriction",
                "start_date": "2025-03-21",
                "target_fraction_weight": 85,
                "target_fraction_weight_unit": "percent",
                "weight_unit": "gram"
            }
        ]
    },
    "processing": {
        "describedBy": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/processing.py",
        "schema_version": "1.1.3",
        "processing_pipeline": {
            "data_processes": [
                {
                    "name": "Other",
                    "software_version": "1.16.0",
                    "start_date_time": "2025-09-23T17:03:39.129631Z",
                    "end_date_time": "2025-09-23T17:03:39.492206Z",
                    "input_location": "/data/vr_foraging_raw_nwb/behavior_789911_2025-07-11_19-47-52_nwb",
                    "output_location": "/results",
                    "code_url": "h",
                    "code_version": null,
                    "parameters": {
                        "cuttoff_hz": 50,
                        "filter_length": 61,
                        "nyquist_rate_hz": 500
                    },
                    "outputs": {},
                    "notes": "FIR Filter applied to running signal",
                    "resources": null
                }
            ],
            "processor_full_name": "Arjun Sridhar",
            "pipeline_version": "",
            "pipeline_url": "",
            "note": "True"
        },
        "analyses": [],
        "notes": null
    },
    "quality_control": {
        "describedBy": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/quality_control.py",
        "schema_version": "1.2.2",
        "evaluations": [
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Processing",
                "name": "Enviornmental Conditions",
                "description": "Enviornmental Conditions",
                "metrics": [
                    {
                        "name": "Environment - Temperature",
                        "value": {
                            "Average": 30.277599334716797
                        },
                        "status_history": [
                            {
                                "evaluator": "",
                                "status": "Fail",
                                "timestamp": "2025-09-23T17:06:33.632099Z"
                            }
                        ],
                        "description": "Fail when Average Temperature is below 23.0 or is above 28.0.",
                        "reference": "environment_Temperature.png",
                        "evaluated_assets": null
                    },
                    {
                        "name": "Environment - Humidity",
                        "value": {
                            "Average": 21.386003494262695
                        },
                        "status_history": [
                            {
                                "evaluator": "",
                                "status": "Fail",
                                "timestamp": "2025-09-23T17:06:33.632099Z"
                            }
                        ],
                        "description": "Fail when Average Humidity is below 23.0 or is above 28.0.",
                        "reference": "environment_Humidity.png",
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T17:06:44.076457Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Processing",
                "name": "Running Velocity",
                "description": "Running Velocity",
                "metrics": [
                    {
                        "name": "Running Velocity",
                        "value": {
                            "Average": 18.680185770766016
                        },
                        "status_history": [
                            {
                                "evaluator": "",
                                "status": "Pass",
                                "timestamp": "2025-09-23T17:06:33.631666Z"
                            }
                        ],
                        "description": "Fail when Average Running Velocity is below 0 or above 70.0",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T17:06:44.076569Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Processing",
                "name": "General Performance",
                "description": "General Performance",
                "metrics": [
                    {
                        "name": "General Performance",
                        "value": {
                            "Total Rewards": 402,
                            "Total Patches": 3
                        },
                        "status_history": [
                            {
                                "evaluator": "",
                                "status": "Pass",
                                "timestamp": "2025-09-23T17:06:33.631666Z"
                            }
                        ],
                        "description": "Fail General Performance: When any metrics have value 0.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T17:06:44.076607Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Processing",
                "name": "Licks",
                "description": "Licks",
                "metrics": [
                    {
                        "name": "Inter-licks distribution",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "",
                                "status": "Pass",
                                "timestamp": "2025-09-23T17:06:33.631666Z"
                            }
                        ],
                        "description": "Fail when density < 0.1.",
                        "reference": "inter_licks_distribution.png",
                        "evaluated_assets": null
                    },
                    {
                        "name": "Number of licks",
                        "value": {
                            "Number of licks": 9579
                        },
                        "status_history": [
                            {
                                "evaluator": "",
                                "status": "Fail",
                                "timestamp": "2025-09-23T17:06:33.632099Z"
                            }
                        ],
                        "description": "Fail when number of licks is 0 or above 1000.0.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "Within lick variability (onset - offset)",
                        "value": {
                            "Within lick variability (onset - offset)": 2.768698627051351
                        },
                        "status_history": [
                            {
                                "evaluator": "",
                                "status": "Pending",
                                "timestamp": "2025-09-23T17:06:33.630882Z"
                            }
                        ],
                        "description": "Within lick variability",
                        "reference": "licks.png",
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T17:06:44.076632Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "Data contract::ContractTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "ContractTestSuite::test_has_errors_on_load",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Fail",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if any non-excluded data streams had loading errors. // Message: The following DataStreams raised errors on load: \n VrForagingDataset::Behavior::HarpManipulator::Reserved8\nVrForagingDataset::Behavior::HarpManipulator::Reserved9\nVrForagingDataset::Behavior::HarpManipulator::Reserved10\nVrForagingDataset::Behavior::HarpManipulator::Reserved11\nVrForagingDataset::Behavior::HarpManipulator::Reserved12\nVrForagingDataset::Behavior::HarpManipulator::Reserved13\nVrForagingDataset::Behavior::HarpManipulator::Reserved14\nVrForagingDataset::Behavior::HarpManipulator::Reserved15\nVrForagingDataset::Behavior::SoftwareEvents::WaitLickOutcome\nVrForagingDataset::Behavior::SoftwareEvents::UpdaterStopDurationOffset\nVrForagingDataset::Behavior::SoftwareEvents::UpdaterStopVelocityThreshold\nVrForagingDataset::Behavior::SoftwareEvents::HabituationRewardAvailable\nVrForagingDataset::Behavior::Logs::Launcher\nVrForagingDataset::Behavior::Logs::EndSession",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "ContractTestSuite::test_has_excluded_as_warnings",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pending",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if any excluded data streams had loading errors and report as warnings. // Message: Found 387 DataStreams that raised ignored errors on load.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpBehavior::HarpDeviceTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpDeviceTestSuite::test_core_version",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the core version of the device matches the one provided // Message: Core version not specified, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_fw_version_matches_reader",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the firmware version of the device matches the one in the reader // Message: Expected version 3.2.0 matches the device's version 3.2.0",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_has_whoami",
                        "value": 1216,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the harp board data stream is present and return its value // Message: None",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_match_whoami_to_yml",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the WhoAmI value matches the device's WhoAmI // Message: WhoAmI value matches the device's WhoAmI",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_read_dump_is_complete",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the read dump from an harp device is complete\n         // Message: Read dump is complete",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_registers_are_monotonicity",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check that the all the harp device registers' timestamps are monotonic\n         // Message: Monotonicity check passed. All registers are monotonic.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_request_response",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Fail",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check that each request to the device has a corresponding response // Message: Request/Response check failed. Some requests do not have a corresponding response.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpManipulator::HarpDeviceTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpDeviceTestSuite::test_core_version",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the core version of the device matches the one provided // Message: Core version not specified, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_fw_version_matches_reader",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the firmware version of the device matches the one in the reader // Message: Expected version 0.7.0 matches the device's version 0.7.0",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_has_whoami",
                        "value": 1130,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the harp board data stream is present and return its value // Message: None",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_match_whoami_to_yml",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the WhoAmI value matches the device's WhoAmI // Message: WhoAmI value matches the device's WhoAmI",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_read_dump_is_complete",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Fail",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the read dump from an harp device is complete\n         // Message: Error during test execution: Harp register: <Reserved8> does not have loaded data",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_registers_are_monotonicity",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Fail",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check that the all the harp device registers' timestamps are monotonic\n         // Message: Error during test execution: Data has not been loaded yet.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_request_response",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check that each request to the device has a corresponding response // Message: Request/Response check passed. All requests have a corresponding response.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpTreadmill::HarpDeviceTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpDeviceTestSuite::test_core_version",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the core version of the device matches the one provided // Message: Core version not specified, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_fw_version_matches_reader",
                        "value": false,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pending",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the firmware version of the device matches the one in the reader // Message: Expected version 0.0.0 is less than the device's version 0.1.0. Consider updating interface package.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_has_whoami",
                        "value": 1402,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the harp board data stream is present and return its value // Message: None",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_match_whoami_to_yml",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the WhoAmI value matches the device's WhoAmI // Message: WhoAmI value matches the device's WhoAmI",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_read_dump_is_complete",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the read dump from an harp device is complete\n         // Message: Read dump is complete",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_registers_are_monotonicity",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check that the all the harp device registers' timestamps are monotonic\n         // Message: Monotonicity check passed. All registers are monotonic.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_request_response",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check that each request to the device has a corresponding response // Message: Request/Response check passed. All requests have a corresponding response.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pending",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpOlfactometer::HarpDeviceTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpDeviceTestSuite::test_core_version",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the core version of the device matches the one provided // Message: Core version not specified, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_fw_version_matches_reader",
                        "value": false,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Fail",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the firmware version of the device matches the one in the reader // Message: Expected version 1.3.0 is greater than the device's version 1.1.0. Consider updating the device firmware.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_has_whoami",
                        "value": 1140,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the harp board data stream is present and return its value // Message: None",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_match_whoami_to_yml",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the WhoAmI value matches the device's WhoAmI // Message: WhoAmI value matches the device's WhoAmI",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_read_dump_is_complete",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the read dump from an harp device is complete\n         // Message: Read dump is complete",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_registers_are_monotonicity",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check that the all the harp device registers' timestamps are monotonic\n         // Message: Monotonicity check passed. All registers are monotonic.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_request_response",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check that each request to the device has a corresponding response // Message: Request/Response check passed. All requests have a corresponding response.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpSniffDetector::HarpDeviceTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpDeviceTestSuite::test_core_version",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the core version of the device matches the one provided // Message: Core version not specified, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_fw_version_matches_reader",
                        "value": false,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Fail",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the firmware version of the device matches the one in the reader // Message: Expected version 0.1.0 is greater than the device's version 0.0.0. Consider updating the device firmware.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_has_whoami",
                        "value": 1401,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the harp board data stream is present and return its value // Message: None",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_match_whoami_to_yml",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the WhoAmI value matches the device's WhoAmI // Message: WhoAmI value matches the device's WhoAmI",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_read_dump_is_complete",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the read dump from an harp device is complete\n         // Message: Read dump is complete",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_registers_are_monotonicity",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check that the all the harp device registers' timestamps are monotonic\n         // Message: Monotonicity check passed. All registers are monotonic.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_request_response",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check that each request to the device has a corresponding response // Message: Request/Response check passed. All requests have a corresponding response.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpSniffDetector::HarpSniffDetectorTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpSniffDetectorTestSuite::test_sniff_detector_physiology",
                        "value": {
                            "num_peaks": 5824,
                            "mean_ipi": 0.7064571526704447,
                            "std_ipi": 0.9431682893087976,
                            "breathing_rate_hz": 1.4155140141478475,
                            "perc99": 17.857142857142858,
                            "perc01": 26.09004195278746
                        },
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pending",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Tests if the sniff detector is actually detecting sniffs by analyzing peaks in the signal. // Message: Breathing rate is 1.4155140141478475 Hz. Expected between 2 and 10 Hz",
                        "reference": "HarpSniffDetectorTestSuite_test_sniff_detector_physiology_b3d88b81d8c74ec696b8cb763847a012.png",
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpSniffDetectorTestSuite::test_sniff_detector_sampling_rate",
                        "value": 249.9994773949554,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Tests if the sampling rate of the sniff detector is within nominal values // Message: Sampling rate is 250.00 Hz. Expected 250 Hz",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpSniffDetectorTestSuite::test_sniff_detector_signal_quality",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Tests the quality of the sniff detector signal by analyzing quantization, clustering, clipping, and sudden jumps. // Message: Signal quality is good",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpSniffDetectorTestSuite::test_whoami",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the WhoAmI value is correct // Message: WhoAmI value is 1401 as expected",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pending",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpLickometer::HarpDeviceTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpDeviceTestSuite::test_core_version",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the core version of the device matches the one provided // Message: Core version not specified, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_fw_version_matches_reader",
                        "value": false,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pending",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the firmware version of the device matches the one in the reader // Message: Expected version 0.0.0 is less than the device's version 0.9.0. Consider updating interface package.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_has_whoami",
                        "value": 1400,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the harp board data stream is present and return its value // Message: None",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_match_whoami_to_yml",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the WhoAmI value matches the device's WhoAmI // Message: WhoAmI value matches the device's WhoAmI",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_read_dump_is_complete",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the read dump from an harp device is complete\n         // Message: Read dump is complete",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_registers_are_monotonicity",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check that the all the harp device registers' timestamps are monotonic\n         // Message: Monotonicity check passed. All registers are monotonic.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_request_response",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Fail",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check that each request to the device has a corresponding response // Message: Request/Response check failed. Some requests do not have a corresponding response.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpClockGenerator::HarpDeviceTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpDeviceTestSuite::test_core_version",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the core version of the device matches the one provided // Message: Core version not specified, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_fw_version_matches_reader",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the firmware version of the device matches the one in the reader // Message: Expected version 0.1.0 matches the device's version 0.1.0",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_has_whoami",
                        "value": 1404,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the harp board data stream is present and return its value // Message: None",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_match_whoami_to_yml",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the WhoAmI value matches the device's WhoAmI // Message: WhoAmI value matches the device's WhoAmI",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_read_dump_is_complete",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the read dump from an harp device is complete\n         // Message: Read dump is complete",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_registers_are_monotonicity",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check that the all the harp device registers' timestamps are monotonic\n         // Message: Monotonicity check passed. All registers are monotonic.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_request_response",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check that each request to the device has a corresponding response // Message: Request/Response check passed. All requests have a corresponding response.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpEnvironmentSensor::HarpDeviceTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpDeviceTestSuite::test_core_version",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the core version of the device matches the one provided // Message: Core version not specified, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_fw_version_matches_reader",
                        "value": false,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pending",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the firmware version of the device matches the one in the reader // Message: Expected version 0.1.0 is less than the device's version 0.2.0. Consider updating interface package.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_has_whoami",
                        "value": 1405,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the harp board data stream is present and return its value // Message: None",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_match_whoami_to_yml",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the WhoAmI value matches the device's WhoAmI // Message: WhoAmI value matches the device's WhoAmI",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_read_dump_is_complete",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the read dump from an harp device is complete\n         // Message: Read dump is complete",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_registers_are_monotonicity",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check that the all the harp device registers' timestamps are monotonic\n         // Message: Monotonicity check passed. All registers are monotonic.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpDeviceTestSuite::test_request_response",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check that each request to the device has a corresponding response // Message: Request/Response check passed. All requests have a corresponding response.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pending",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "HarpHub::HarpHubTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "HarpHubTestSuite::test_clock_generator_reg",
                        "value": false,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Fail",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks if the clock generator device is actually a clock generator // Message: Clock generator is not a clock generator",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_devices_are_subordinate",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks if the devices are subordinate to the clock generator // Message: Device HarpBehavior is subordinate to the clock generator",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_devices_are_subordinate",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks if the devices are subordinate to the clock generator // Message: Device HarpManipulator is subordinate to the clock generator",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_devices_are_subordinate",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks if the devices are subordinate to the clock generator // Message: Device HarpTreadmill is subordinate to the clock generator",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_devices_are_subordinate",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks if the devices are subordinate to the clock generator // Message: Device HarpOlfactometer is subordinate to the clock generator",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_devices_are_subordinate",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks if the devices are subordinate to the clock generator // Message: Device HarpSniffDetector is subordinate to the clock generator",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_devices_are_subordinate",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks if the devices are subordinate to the clock generator // Message: Device HarpLickometer is subordinate to the clock generator",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_devices_are_subordinate",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks if the devices are subordinate to the clock generator // Message: Device HarpEnvironmentSensor is subordinate to the clock generator",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_is_read_dump_synchronized",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the read dump from the devices arrives are roughly the same time // Message: Device HarpBehavior read dump is synchronized with the clock generator's",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_is_read_dump_synchronized",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the read dump from the devices arrives are roughly the same time // Message: Device HarpManipulator read dump is synchronized with the clock generator's",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_is_read_dump_synchronized",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the read dump from the devices arrives are roughly the same time // Message: Device HarpTreadmill read dump is synchronized with the clock generator's",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_is_read_dump_synchronized",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the read dump from the devices arrives are roughly the same time // Message: Device HarpOlfactometer read dump is synchronized with the clock generator's",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_is_read_dump_synchronized",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the read dump from the devices arrives are roughly the same time // Message: Device HarpSniffDetector read dump is synchronized with the clock generator's",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_is_read_dump_synchronized",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the read dump from the devices arrives are roughly the same time // Message: Device HarpLickometer read dump is synchronized with the clock generator's",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "HarpHubTestSuite::test_is_read_dump_synchronized",
                        "value": true,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check if the read dump from the devices arrives are roughly the same time // Message: Device HarpEnvironmentSensor read dump is synchronized with the clock generator's",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "FaceCamera::CameraTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "CameraTestSuite::test_check_dropped_frames",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if there are dropped frames in the metadata DataFrame.\n         // Message: No dropped frames detected in metadata.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_histogram_and_create_asset",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks the histogram of the video and ensures color is well distributed.\n        It also saves an asset with a single frame of the video and color histogram. // Message: Histogram and asset created successfully.",
                        "reference": "CameraTestSuite_test_histogram_and_create_asset_441bb4155b834f50a1a69dfbf18dc922.png",
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_is_start_bounded",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the start time of the video is bounded by the provided start time. // Message: No start time provided, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_is_stop_bounded",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the stop time of the video is bounded by the provided stop time. // Message: No stop time provided, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_match_expected_fps",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the frames per second (FPS) of the video metadata matches the expected FPS. // Message: Mean frame period (-4.559203269213427e-08) is within expected range: 0.002777777777777778",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_metadata_shape",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Checks if the metadata DataFrame has the expected shape. Including headers.\n         // Message: Metadata DataFrame has expected shape and columns",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_video_frame_count",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the number of frames in the video matches the number of rows in the metadata DataFrame.\n         // Message: Number of frames in video (1481020) matches number of rows in metadata (1481020)",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "SideCamera::CameraTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "CameraTestSuite::test_check_dropped_frames",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if there are dropped frames in the metadata DataFrame.\n         // Message: No dropped frames detected in metadata.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_histogram_and_create_asset",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks the histogram of the video and ensures color is well distributed.\n        It also saves an asset with a single frame of the video and color histogram. // Message: Histogram and asset created successfully.",
                        "reference": "CameraTestSuite_test_histogram_and_create_asset_c6ff5fca25e4428db6affb00000a57d2.png",
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_is_start_bounded",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the start time of the video is bounded by the provided start time. // Message: No start time provided, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_is_stop_bounded",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the stop time of the video is bounded by the provided stop time. // Message: No stop time provided, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_match_expected_fps",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the frames per second (FPS) of the video metadata matches the expected FPS. // Message: Mean frame period (-4.559203269213427e-08) is within expected range: 0.002777777777777778",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_metadata_shape",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Checks if the metadata DataFrame has the expected shape. Including headers.\n         // Message: Metadata DataFrame has expected shape and columns",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_video_frame_count",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the number of frames in the video matches the number of rows in the metadata DataFrame.\n         // Message: Number of frames in video (1481020) matches number of rows in metadata (1481020)",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "FrontCamera::CameraTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "CameraTestSuite::test_check_dropped_frames",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if there are dropped frames in the metadata DataFrame.\n         // Message: No dropped frames detected in metadata.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_histogram_and_create_asset",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Checks the histogram of the video and ensures color is well distributed.\n        It also saves an asset with a single frame of the video and color histogram. // Message: Histogram and asset created successfully.",
                        "reference": "CameraTestSuite_test_histogram_and_create_asset_97d1e2bcef7a4083b799b422b29cdf80.png",
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_is_start_bounded",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the start time of the video is bounded by the provided start time. // Message: No start time provided, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_is_stop_bounded",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the stop time of the video is bounded by the provided stop time. // Message: No stop time provided, skipping test.",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_match_expected_fps",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the frames per second (FPS) of the video metadata matches the expected FPS. // Message: Mean frame period (-4.559203269213427e-08) is within expected range: 0.002777777777777778",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_metadata_shape",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Checks if the metadata DataFrame has the expected shape. Including headers.\n         // Message: Metadata DataFrame has expected shape and columns",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CameraTestSuite::test_video_frame_count",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the number of frames in the video matches the number of rows in the metadata DataFrame.\n         // Message: Number of frames in video (1481020) matches number of rows in metadata (1481020)",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "CurrentPosition::CsvTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "CsvTestSuite::test_infer_missing_headers",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Infer if the DataFrame was loaded from a CSV without headers.\n         // Message: DataFramed was likely loaded from a CSV with headers",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CsvTestSuite::test_is_instance_of_pandas_dataframe",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the data stream is a pandas DataFrame.\n         // Message: Data stream is a pandas DataFrame",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CsvTestSuite::test_is_not_empty",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the DataFrame is not empty.\n         // Message: Data stream is not empty",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "IsStopped::CsvTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "CsvTestSuite::test_infer_missing_headers",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Infer if the DataFrame was loaded from a CSV without headers.\n         // Message: DataFramed was likely loaded from a CSV with headers",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CsvTestSuite::test_is_instance_of_pandas_dataframe",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the data stream is a pandas DataFrame.\n         // Message: Data stream is a pandas DataFrame",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CsvTestSuite::test_is_not_empty",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the DataFrame is not empty.\n         // Message: Data stream is not empty",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "Torque::CsvTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "CsvTestSuite::test_infer_missing_headers",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Infer if the DataFrame was loaded from a CSV without headers.\n         // Message: DataFramed was likely loaded from a CSV with headers",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CsvTestSuite::test_is_instance_of_pandas_dataframe",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the data stream is a pandas DataFrame.\n         // Message: Data stream is a pandas DataFrame",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CsvTestSuite::test_is_not_empty",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the DataFrame is not empty.\n         // Message: Data stream is not empty",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "RendererSynchState::CsvTestSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "CsvTestSuite::test_infer_missing_headers",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Infer if the DataFrame was loaded from a CSV without headers.\n         // Message: DataFramed was likely loaded from a CSV with headers",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CsvTestSuite::test_is_instance_of_pandas_dataframe",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the data stream is a pandas DataFrame.\n         // Message: Data stream is a pandas DataFrame",
                        "reference": null,
                        "evaluated_assets": null
                    },
                    {
                        "name": "CsvTestSuite::test_is_not_empty",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Pass",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: \n        Check if the DataFrame is not empty.\n         // Message: Data stream is not empty",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Pass",
                "created": "2025-09-23T16:57:55.386574Z"
            },
            {
                "modality": {
                    "name": "Behavior",
                    "abbreviation": "behavior"
                },
                "stage": "Raw data",
                "name": "VrForaging::VrForagingQcSuite",
                "description": null,
                "metrics": [
                    {
                        "name": "VrForagingQcSuite::test_end_session_exists",
                        "value": null,
                        "status_history": [
                            {
                                "evaluator": "Automated",
                                "status": "Fail",
                                "timestamp": "2025-09-23T16:57:55.386574Z"
                            }
                        ],
                        "description": "Test: Check that the session has an end event. // Message: EndSession event does not exist. Session may be corrupted or not ended properly.",
                        "reference": null,
                        "evaluated_assets": null
                    }
                ],
                "tags": null,
                "notes": null,
                "allow_failed_metrics": false,
                "latest_status": "Fail",
                "created": "2025-09-23T16:57:55.386574Z"
            }
        ],
        "notes": null
    },
    "rig": {
        "additional_devices": [],
        "calibrations": [
            {
                "calibration_date": "2024-03-11T00:00:00-07:00",
                "description": "Water calibration for Lick spout. The input is the valve open time in seconds and the output is the volume of water delivered in microliters.",
                "device_name": "WaterValve",
                "input": {
                    "valve open time (s):": [
                        0.03,
                        0.05,
                        0.08,
                        0.1,
                        0.12,
                        0.17,
                        0.2
                    ]
                },
                "notes": null,
                "output": {
                    "water volume (ul):": [
                        0.4,
                        0.66,
                        0.94,
                        1.12,
                        1.36,
                        2.1,
                        2.44
                    ]
                }
            }
        ],
        "cameras": [
            {
                "camera": {
                    "additional_settings": {},
                    "bin_height": null,
                    "bin_mode": "None",
                    "bin_unit": "pixel",
                    "bin_width": null,
                    "bit_depth": null,
                    "chroma": "Monochrome",
                    "computer_name": "YACUMAMA",
                    "cooling": "Air",
                    "crop_height": null,
                    "crop_offset_x": null,
                    "crop_offset_y": null,
                    "crop_unit": "pixel",
                    "crop_width": null,
                    "data_interface": "USB",
                    "detector_type": "Camera",
                    "device_type": "Detector",
                    "driver": null,
                    "driver_version": null,
                    "frame_rate": "360",
                    "frame_rate_unit": "hertz",
                    "gain": "3.0",
                    "immersion": null,
                    "manufacturer": {
                        "abbreviation": "FLIR",
                        "name": "Teledyne FLIR",
                        "registry": {
                            "abbreviation": "ROR",
                            "name": "Research Organization Registry"
                        },
                        "registry_identifier": "01j1gwp17"
                    },
                    "model": "Blackfly S BFS-U3-04S2M",
                    "name": "FaceCamera",
                    "notes": null,
                    "path_to_cad": null,
                    "port_index": null,
                    "recording_software": null,
                    "sensor_format": "1/2.9",
                    "sensor_format_unit": "inch",
                    "sensor_height": 540,
                    "sensor_width": 720,
                    "serial_number": "23350989",
                    "size_unit": "pixel"
                },
                "camera_target": "Face side right",
                "filter": {
                    "additional_settings": {},
                    "center_wavelength": null,
                    "cut_off_wavelength": null,
                    "cut_on_wavelength": null,
                    "description": "810 nm longpass filter",
                    "device_type": "Filter",
                    "diameter": null,
                    "filter_type": "Long pass",
                    "filter_wheel_index": null,
                    "height": null,
                    "manufacturer": {
                        "abbreviation": null,
                        "name": "Thorlabs",
                        "registry": {
                            "abbreviation": "ROR",
                            "name": "Research Organization Registry"
                        },
                        "registry_identifier": "04gsnvb07"
                    },
                    "model": null,
                    "name": "LP filter",
                    "notes": null,
                    "path_to_cad": null,
                    "port_index": null,
                    "serial_number": null,
                    "size_unit": "millimeter",
                    "thickness": null,
                    "thickness_unit": "millimeter",
                    "wavelength_unit": "nanometer",
                    "width": null
                },
                "lens": {
                    "additional_settings": {},
                    "device_type": "Lens",
                    "focal_length": "16",
                    "focal_length_unit": "millimeter",
                    "lens_size_unit": "inch",
                    "manufacturer": {
                        "abbreviation": null,
                        "name": "Tamron",
                        "registry": null,
                        "registry_identifier": null
                    },
                    "max_aperture": null,
                    "model": "M112FM16",
                    "name": "Behavior Video Lens Face View",
                    "notes": null,
                    "optimized_wavelength_range": null,
                    "path_to_cad": null,
                    "port_index": null,
                    "serial_number": null,
                    "size": null,
                    "wavelength_unit": "nanometer"
                },
                "name": "FaceCamera",
                "position": null
            },
            {
                "camera": {
                    "additional_settings": {},
                    "bin_height": null,
                    "bin_mode": "None",
                    "bin_unit": "pixel",
                    "bin_width": null,
                    "bit_depth": null,
                    "chroma": "Monochrome",
                    "computer_name": "YACUMAMA",
                    "cooling": "Air",
                    "crop_height": null,
                    "crop_offset_x": null,
                    "crop_offset_y": null,
                    "crop_unit": "pixel",
                    "crop_width": null,
                    "data_interface": "USB",
                    "detector_type": "Camera",
                    "device_type": "Detector",
                    "driver": null,
                    "driver_version": null,
                    "frame_rate": "360",
                    "frame_rate_unit": "hertz",
                    "gain": "3.0",
                    "immersion": null,
                    "manufacturer": {
                        "abbreviation": "FLIR",
                        "name": "Teledyne FLIR",
                        "registry": {
                            "abbreviation": "ROR",
                            "name": "Research Organization Registry"
                        },
                        "registry_identifier": "01j1gwp17"
                    },
                    "model": "Blackfly S BFS-U3-04S2M",
                    "name": "SideCamera",
                    "notes": null,
                    "path_to_cad": null,
                    "port_index": null,
                    "recording_software": null,
                    "sensor_format": "1/2.9",
                    "sensor_format_unit": "inch",
                    "sensor_height": 540,
                    "sensor_width": 720,
                    "serial_number": "23029770",
                    "size_unit": "pixel"
                },
                "camera_target": "Side",
                "filter": null,
                "lens": {
                    "additional_settings": {},
                    "device_type": "Lens",
                    "focal_length": "5",
                    "focal_length_unit": "millimeter",
                    "lens_size_unit": "inch",
                    "manufacturer": {
                        "abbreviation": null,
                        "name": "Other",
                        "registry": null,
                        "registry_identifier": null
                    },
                    "max_aperture": null,
                    "model": "LM5JCM",
                    "name": "Behavior Video Lens Side View",
                    "notes": "Manufacturer is KOWA",
                    "optimized_wavelength_range": null,
                    "path_to_cad": null,
                    "port_index": null,
                    "serial_number": null,
                    "size": null,
                    "wavelength_unit": "nanometer"
                },
                "name": "SideCamera",
                "position": null
            },
            {
                "camera": {
                    "additional_settings": {},
                    "bin_height": null,
                    "bin_mode": "Additive",
                    "bin_unit": "pixel",
                    "bin_width": null,
                    "bit_depth": null,
                    "chroma": "Color",
                    "computer_name": "YACUMAMA",
                    "cooling": "Air",
                    "crop_height": null,
                    "crop_offset_x": null,
                    "crop_offset_y": null,
                    "crop_unit": "pixel",
                    "crop_width": null,
                    "data_interface": "USB",
                    "detector_type": "Camera",
                    "device_type": "Detector",
                    "driver": null,
                    "driver_version": null,
                    "frame_rate": "30",
                    "frame_rate_unit": "hertz",
                    "gain": null,
                    "immersion": null,
                    "manufacturer": {
                        "abbreviation": "Ailipu",
                        "name": "Ailipu Technology Co",
                        "registry": null,
                        "registry_identifier": null
                    },
                    "model": "ELP-USBFHD05MT-KL170IR",
                    "name": "Bottom face Camera",
                    "notes": "The targe is top of the body",
                    "path_to_cad": null,
                    "port_index": null,
                    "recording_software": {
                        "name": "Bonsai",
                        "parameters": {},
                        "url": null,
                        "version": "2.5"
                    },
                    "sensor_format": null,
                    "sensor_format_unit": null,
                    "sensor_height": 480,
                    "sensor_width": 640,
                    "serial_number": null,
                    "size_unit": "pixel"
                },
                "camera_target": "Body",
                "filter": null,
                "lens": {
                    "additional_settings": {},
                    "device_type": "Lens",
                    "focal_length": null,
                    "focal_length_unit": "millimeter",
                    "lens_size_unit": "inch",
                    "manufacturer": {
                        "abbreviation": null,
                        "name": "Other",
                        "registry": null,
                        "registry_identifier": null
                    },
                    "max_aperture": "f/1.4",
                    "model": "XC0922LENS",
                    "name": "Xenocam 2",
                    "notes": "Focal Length 9-22mm 1/3\" IR F1.4",
                    "optimized_wavelength_range": null,
                    "path_to_cad": null,
                    "port_index": null,
                    "serial_number": "unknown",
                    "size": null,
                    "wavelength_unit": "nanometer"
                },
                "name": "USB_top_view",
                "position": null
            },
            {
                "camera": {
                    "additional_settings": {},
                    "bin_height": null,
                    "bin_mode": "None",
                    "bin_unit": "pixel",
                    "bin_width": null,
                    "bit_depth": null,
                    "chroma": "Monochrome",
                    "computer_name": "YACUMAMA",
                    "cooling": "Air",
                    "crop_height": null,
                    "crop_offset_x": null,
                    "crop_offset_y": null,
                    "crop_unit": "pixel",
                    "crop_width": null,
                    "data_interface": "USB",
                    "detector_type": "Camera",
                    "device_type": "Detector",
                    "driver": null,
                    "driver_version": null,
                    "frame_rate": "360",
                    "frame_rate_unit": "hertz",
                    "gain": "0.0",
                    "immersion": null,
                    "manufacturer": {
                        "abbreviation": "FLIR",
                        "name": "Teledyne FLIR",
                        "registry": {
                            "abbreviation": "ROR",
                            "name": "Research Organization Registry"
                        },
                        "registry_identifier": "01j1gwp17"
                    },
                    "model": "Blackfly S BFS-U3-04S2M",
                    "name": "FrontCamera",
                    "notes": null,
                    "path_to_cad": null,
                    "port_index": null,
                    "recording_software": null,
                    "sensor_format": "1/2.9",
                    "sensor_format_unit": "inch",
                    "sensor_height": 540,
                    "sensor_width": 720,
                    "serial_number": "23271550",
                    "size_unit": "pixel"
                },
                "camera_target": "Face side right",
                "filter": null,
                "lens": {
                    "additional_settings": {},
                    "device_type": "Lens",
                    "focal_length": "25",
                    "focal_length_unit": "millimeter",
                    "lens_size_unit": "inch",
                    "manufacturer": {
                        "abbreviation": null,
                        "name": "Other",
                        "registry": null,
                        "registry_identifier": null
                    },
                    "max_aperture": null,
                    "model": "LM25HC",
                    "name": "Behavior Video Lens Front View",
                    "notes": "Manufacturer is KOWA",
                    "optimized_wavelength_range": null,
                    "path_to_cad": null,
                    "port_index": null,
                    "serial_number": null,
                    "size": null,
                    "wavelength_unit": "nanometer"
                },
                "name": "FrontCamera",
                "position": null
            }
        ],
        "ccf_coordinate_transform": null,
        "daqs": [
            {
                "additional_settings": {},
                "channels": [
                    {
                        "channel_index": null,
                        "channel_name": "DO0",
                        "channel_type": "Digital Output",
                        "device_name": "FaceCamera",
                        "event_based_sampling": null,
                        "port": null,
                        "sample_rate": null,
                        "sample_rate_unit": "hertz"
                    },
                    {
                        "channel_index": null,
                        "channel_name": "DO0",
                        "channel_type": "Digital Output",
                        "device_name": "SideCamera",
                        "event_based_sampling": null,
                        "port": null,
                        "sample_rate": null,
                        "sample_rate_unit": "hertz"
                    },
                    {
                        "channel_index": null,
                        "channel_name": "DO0",
                        "channel_type": "Digital Output",
                        "device_name": "FrontCamera",
                        "event_based_sampling": null,
                        "port": null,
                        "sample_rate": null,
                        "sample_rate_unit": "hertz"
                    },
                    {
                        "channel_index": null,
                        "channel_name": "DO1",
                        "channel_type": "Digital Output",
                        "device_name": "Speaker",
                        "event_based_sampling": null,
                        "port": null,
                        "sample_rate": null,
                        "sample_rate_unit": "hertz"
                    },
                    {
                        "channel_index": null,
                        "channel_name": "PWM0",
                        "channel_type": "Digital Output",
                        "device_name": "Solenoid",
                        "event_based_sampling": null,
                        "port": null,
                        "sample_rate": null,
                        "sample_rate_unit": "hertz"
                    }
                ],
                "computer_name": "YACUMAMA",
                "core_version": null,
                "data_interface": "USB",
                "device_type": "Harp device",
                "firmware_version": null,
                "hardware_version": null,
                "harp_device_type": {
                    "name": "Behavior",
                    "whoami": 1216
                },
                "is_clock_generator": false,
                "manufacturer": {
                    "abbreviation": "OEPS",
                    "name": "Open Ephys Production Site",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "007rkz355"
                },
                "model": null,
                "name": "harp_behavior",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "tag_version": null
            },
            {
                "additional_settings": {},
                "channels": [],
                "computer_name": "YACUMAMA",
                "core_version": null,
                "data_interface": "USB",
                "device_type": "Harp device",
                "firmware_version": null,
                "hardware_version": null,
                "harp_device_type": {
                    "name": "Clock Synchronizer",
                    "whoami": 1152
                },
                "is_clock_generator": true,
                "manufacturer": {
                    "abbreviation": "AIND",
                    "name": "Allen Institute for Neural Dynamics",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "04szwah67"
                },
                "model": null,
                "name": "harp_white_rabbit",
                "notes": "White Rabbit clock for synchronization: https://github.com/AllenNeuralDynamics/harp.device.white-rabbit",
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "tag_version": null
            },
            {
                "additional_settings": {},
                "channels": [
                    {
                        "channel_index": null,
                        "channel_name": "Torque sensor",
                        "channel_type": "Analog Output",
                        "device_name": "harp_treadmill",
                        "event_based_sampling": null,
                        "port": null,
                        "sample_rate": null,
                        "sample_rate_unit": "hertz"
                    },
                    {
                        "channel_index": null,
                        "channel_name": "Encoder",
                        "channel_type": "Analog Output",
                        "device_name": "harp_treadmill",
                        "event_based_sampling": null,
                        "port": null,
                        "sample_rate": null,
                        "sample_rate_unit": "hertz"
                    },
                    {
                        "channel_index": null,
                        "channel_name": "Magnetic brake",
                        "channel_type": "Analog Output",
                        "device_name": "harp_treadmill",
                        "event_based_sampling": null,
                        "port": null,
                        "sample_rate": null,
                        "sample_rate_unit": "hertz"
                    }
                ],
                "computer_name": "YACUMAMA",
                "core_version": null,
                "data_interface": "USB",
                "device_type": "Harp device",
                "firmware_version": null,
                "hardware_version": null,
                "harp_device_type": {
                    "name": "Treadmill",
                    "whoami": 1402
                },
                "is_clock_generator": false,
                "manufacturer": {
                    "abbreviation": "AIND",
                    "name": "Allen Institute for Neural Dynamics",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "04szwah67"
                },
                "model": null,
                "name": "harp_treadmill",
                "notes": "https://github.com/AllenNeuralDynamics/harp.device.treadmill-driver",
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "tag_version": null
            },
            {
                "additional_settings": {},
                "channels": [],
                "computer_name": "YACUMAMA",
                "core_version": null,
                "data_interface": "USB",
                "device_type": "Harp device",
                "firmware_version": null,
                "hardware_version": null,
                "harp_device_type": {
                    "name": "Lickety Split",
                    "whoami": 1400
                },
                "is_clock_generator": false,
                "manufacturer": {
                    "abbreviation": "AIND",
                    "name": "Allen Institute for Neural Dynamics",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "04szwah67"
                },
                "model": null,
                "name": "harp_lickometer",
                "notes": "Lick sensor with low noise artifacts; https://github.com/AllenNeuralDynamics/harp.device.lickety-split",
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "tag_version": null
            },
            {
                "additional_settings": {},
                "channels": [],
                "computer_name": "YACUMAMA",
                "core_version": null,
                "data_interface": "USB",
                "device_type": "Harp device",
                "firmware_version": null,
                "hardware_version": null,
                "harp_device_type": {
                    "name": "Stepper Driver",
                    "whoami": 1130
                },
                "is_clock_generator": false,
                "manufacturer": {
                    "abbreviation": "AIND",
                    "name": "Allen Institute for Neural Dynamics",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "04szwah67"
                },
                "model": null,
                "name": "Stepper driver",
                "notes": "Stepper driver for positioning the lick spout and the odor tubes; https://allenneuraldynamics.github.io/Bonsai.AllenNeuralDynamics/articles/aind-manipulator.html",
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "tag_version": null
            },
            {
                "additional_settings": {},
                "channels": [],
                "computer_name": "YACUMAMA",
                "core_version": null,
                "data_interface": "USB",
                "device_type": "Harp device",
                "firmware_version": null,
                "hardware_version": null,
                "harp_device_type": {
                    "name": "Olfactometer",
                    "whoami": 1140
                },
                "is_clock_generator": false,
                "manufacturer": {
                    "abbreviation": "Champalimaud",
                    "name": "Champalimaud Foundation",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "03g001n57"
                },
                "model": null,
                "name": "harp_olfactometer",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "tag_version": null
            }
        ],
        "describedBy": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/rig.py",
        "detectors": [],
        "digital_micromirror_devices": [],
        "enclosure": {
            "additional_settings": {},
            "air_filtration": false,
            "device_type": "Enclosure",
            "external_material": "Wood and aluminium frame",
            "grounded": true,
            "internal_material": "High density foam",
            "laser_interlock": false,
            "manufacturer": {
                "abbreviation": "AIND",
                "name": "Allen Institute for Neural Dynamics",
                "registry": {
                    "abbreviation": "ROR",
                    "name": "Research Organization Registry"
                },
                "registry_identifier": "04szwah67"
            },
            "model": null,
            "name": "Behavior enclosure",
            "notes": null,
            "path_to_cad": null,
            "port_index": null,
            "serial_number": null,
            "size": {
                "height": 506,
                "length": 540,
                "unit": "millimeter",
                "width": 568
            }
        },
        "ephys_assemblies": [],
        "fiber_assemblies": [],
        "filters": [
            {
                "additional_settings": {},
                "center_wavelength": null,
                "cut_off_wavelength": 750,
                "cut_on_wavelength": null,
                "description": null,
                "device_type": "Filter",
                "diameter": null,
                "filter_type": "Dichroic",
                "filter_wheel_index": null,
                "height": "6",
                "manufacturer": {
                    "abbreviation": null,
                    "name": "Other",
                    "registry": null,
                    "registry_identifier": null
                },
                "model": "HM-VS-1150",
                "name": "Hot Mirror Filter",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "size_unit": "inch",
                "thickness": null,
                "thickness_unit": "millimeter",
                "wavelength_unit": "nanometer",
                "width": "8"
            }
        ],
        "laser_assemblies": [],
        "lenses": [
            {
                "additional_settings": {},
                "device_type": "Lens",
                "focal_length": "50",
                "focal_length_unit": "millimeter",
                "lens_size_unit": "inch",
                "manufacturer": {
                    "abbreviation": null,
                    "name": "Thorlabs",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "04gsnvb07"
                },
                "max_aperture": null,
                "model": "LA1255-B",
                "name": "IR LED - Face lens",
                "notes": null,
                "optimized_wavelength_range": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "size": null,
                "wavelength_unit": "nanometer"
            },
            {
                "additional_settings": {},
                "device_type": "Lens",
                "focal_length": "30",
                "focal_length_unit": "millimeter",
                "lens_size_unit": "inch",
                "manufacturer": {
                    "abbreviation": null,
                    "name": "Thorlabs",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "04gsnvb07"
                },
                "max_aperture": null,
                "model": "LA1805-B",
                "name": "IR LED - Side lens",
                "notes": null,
                "optimized_wavelength_range": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "size": null,
                "wavelength_unit": "nanometer"
            }
        ],
        "light_sources": [
            {
                "additional_settings": {},
                "bandwidth": null,
                "bandwidth_unit": "nanometer",
                "device_type": "Light emitting diode",
                "manufacturer": {
                    "abbreviation": null,
                    "name": "Thorlabs",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "04gsnvb07"
                },
                "model": "M810L5",
                "name": "IR LED - Face",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "wavelength": 810,
                "wavelength_unit": "nanometer"
            },
            {
                "additional_settings": {},
                "bandwidth": null,
                "bandwidth_unit": "nanometer",
                "device_type": "Light emitting diode",
                "manufacturer": {
                    "abbreviation": null,
                    "name": "Thorlabs",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "04gsnvb07"
                },
                "model": "M810L5",
                "name": "IR LED - Side",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "wavelength": 810,
                "wavelength_unit": "nanometer"
            }
        ],
        "modalities": [
            {
                "abbreviation": "behavior",
                "name": "Behavior"
            },
            {
                "abbreviation": "behavior-videos",
                "name": "Behavior videos"
            }
        ],
        "modification_date": "2025-06-12",
        "mouse_platform": {
            "additional_settings": {},
            "brake_output": {
                "channel_index": null,
                "channel_name": "Magnetic brake",
                "channel_type": "Analog Output",
                "device_name": "harp_treadmill",
                "event_based_sampling": null,
                "port": null,
                "sample_rate": null,
                "sample_rate_unit": "hertz"
            },
            "date_surface_replaced": null,
            "device_type": "Wheel",
            "encoder": {
                "additional_settings": {},
                "device_type": "Encoder",
                "manufacturer": null,
                "model": "AMT102-V",
                "name": "Encoder",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null
            },
            "encoder_output": {
                "channel_index": null,
                "channel_name": "Encoder",
                "channel_type": "Analog Output",
                "device_name": "harp_treadmill",
                "event_based_sampling": null,
                "port": null,
                "sample_rate": null,
                "sample_rate_unit": "hertz"
            },
            "magnetic_brake": {
                "additional_settings": {},
                "device_type": "Magnetic brake",
                "manufacturer": null,
                "model": "B1-2FM",
                "name": "Magnetic brake",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null
            },
            "manufacturer": {
                "abbreviation": "AIND",
                "name": "Allen Institute for Neural Dynamics",
                "registry": {
                    "abbreviation": "ROR",
                    "name": "Research Organization Registry"
                },
                "registry_identifier": "04szwah67"
            },
            "model": null,
            "name": "VR Wheel",
            "notes": null,
            "path_to_cad": "https://tinyurl.com/AI-RunningWheel",
            "port_index": null,
            "pulse_per_revolution": 8192,
            "radius": "7.5",
            "serial_number": null,
            "size_unit": "centimeter",
            "surface_material": "Rubber",
            "torque_output": {
                "channel_index": null,
                "channel_name": "Torque sensor",
                "channel_type": "Analog Output",
                "device_name": "harp_treadmill",
                "event_based_sampling": null,
                "port": null,
                "sample_rate": null,
                "sample_rate_unit": "hertz"
            },
            "torque_sensor": {
                "additional_settings": {},
                "device_type": "Torque sensor",
                "manufacturer": {
                    "abbreviation": null,
                    "name": "Transducer Techniques",
                    "registry": null,
                    "registry_identifier": null
                },
                "model": "RTS-10",
                "name": "Torque sensor",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null
            },
            "width": "3.5"
        },
        "notes": null,
        "objectives": [],
        "origin": null,
        "patch_cords": [],
        "pockels_cells": [],
        "polygonal_scanners": [],
        "rig_axes": null,
        "rig_id": "426_4C_20250612",
        "schema_version": "1.1.1",
        "stick_microscopes": [],
        "stimulus_devices": [
            {
                "device_type": "Reward delivery",
                "reward_spouts": [
                    {
                        "additional_settings": {},
                        "device_type": "Reward spout",
                        "lick_sensor": {
                            "additional_settings": {},
                            "device_type": "Harp device",
                            "manufacturer": {
                                "abbreviation": "AIND",
                                "name": "Allen Institute for Neural Dynamics",
                                "registry": {
                                    "abbreviation": "ROR",
                                    "name": "Research Organization Registry"
                                },
                                "registry_identifier": "04szwah67"
                            },
                            "model": null,
                            "name": "harp_lickometer",
                            "notes": "Lick sensor with low noise artifacts; https://github.com/AllenNeuralDynamics/harp.device.lickety-split",
                            "path_to_cad": null,
                            "port_index": null,
                            "serial_number": null
                        },
                        "lick_sensor_type": "Capacitive",
                        "manufacturer": {
                            "abbreviation": null,
                            "name": "Other",
                            "registry": null,
                            "registry_identifier": null
                        },
                        "model": "89875K27",
                        "name": "Lick spout",
                        "notes": "Lick spout for water delivery, the tube is ordered from McMaster, cut to size and shaped by AIND",
                        "path_to_cad": null,
                        "port_index": null,
                        "serial_number": null,
                        "side": "Center",
                        "solenoid_valve": {
                            "additional_settings": {},
                            "device_type": "Solenoid",
                            "manufacturer": {
                                "abbreviation": null,
                                "name": "The Lee Company",
                                "registry": null,
                                "registry_identifier": null
                            },
                            "model": "LHDB1233518H",
                            "name": "Solenoid",
                            "notes": null,
                            "path_to_cad": null,
                            "port_index": null,
                            "serial_number": null
                        },
                        "spout_diameter": "1.2",
                        "spout_diameter_unit": "millimeter",
                        "spout_position": null
                    }
                ],
                "stage_type": {
                    "additional_settings": {},
                    "device_type": "Motorized stage",
                    "firmware": null,
                    "manufacturer": {
                        "abbreviation": "AIND",
                        "name": "Allen Institute for Neural Dynamics",
                        "registry": {
                            "abbreviation": "ROR",
                            "name": "Research Organization Registry"
                        },
                        "registry_identifier": "04szwah67"
                    },
                    "model": "328-300-00",
                    "name": "Motorized stage",
                    "notes": "Motorized stage for positioning",
                    "path_to_cad": null,
                    "port_index": null,
                    "serial_number": null,
                    "travel": "30",
                    "travel_unit": "millimeter"
                }
            },
            {
                "additional_settings": {},
                "device_type": "Speaker",
                "manufacturer": {
                    "abbreviation": null,
                    "name": "Tymphany",
                    "registry": null,
                    "registry_identifier": null
                },
                "model": "XT25SC90-04",
                "name": "Speaker",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "position": null,
                "serial_number": null
            },
            {
                "additional_settings": {},
                "channels": [
                    {
                        "channel_index": 0,
                        "channel_type": "Odor",
                        "flow_capacity": 100,
                        "flow_unit": "mL/min"
                    },
                    {
                        "channel_index": 1,
                        "channel_type": "Odor",
                        "flow_capacity": 100,
                        "flow_unit": "mL/min"
                    },
                    {
                        "channel_index": 2,
                        "channel_type": "Odor",
                        "flow_capacity": 100,
                        "flow_unit": "mL/min"
                    },
                    {
                        "channel_index": 3,
                        "channel_type": "Carrier",
                        "flow_capacity": 1000,
                        "flow_unit": "mL/min"
                    },
                    {
                        "channel_index": 4,
                        "channel_type": "Carrier",
                        "flow_capacity": 1000,
                        "flow_unit": "mL/min"
                    }
                ],
                "computer_name": "YACUMAMA",
                "core_version": null,
                "data_interface": "USB",
                "device_type": "Olfactometer",
                "firmware_version": null,
                "hardware_version": null,
                "harp_device_type": {
                    "name": "Olfactometer",
                    "whoami": 1140
                },
                "is_clock_generator": false,
                "manufacturer": {
                    "abbreviation": "Champalimaud",
                    "name": "Champalimaud Foundation",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "03g001n57"
                },
                "model": null,
                "name": "Olfactometer",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "serial_number": null,
                "tag_version": null
            },
            {
                "additional_settings": {},
                "brightness": null,
                "contrast": null,
                "device_type": "Monitor",
                "height": 1536,
                "manufacturer": {
                    "abbreviation": null,
                    "name": "LG",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "02b948n83"
                },
                "model": "LG LP097QX1",
                "name": "Screen Left",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "position": null,
                "refresh_rate": 60,
                "serial_number": null,
                "size_unit": "pixel",
                "viewing_distance": "15.5",
                "viewing_distance_unit": "centimeter",
                "width": 2048
            },
            {
                "additional_settings": {},
                "brightness": null,
                "contrast": null,
                "device_type": "Monitor",
                "height": 1536,
                "manufacturer": {
                    "abbreviation": null,
                    "name": "LG",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "02b948n83"
                },
                "model": "LG LP097QX1",
                "name": "Screen Center",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "position": null,
                "refresh_rate": 60,
                "serial_number": null,
                "size_unit": "pixel",
                "viewing_distance": "17.5",
                "viewing_distance_unit": "centimeter",
                "width": 2048
            },
            {
                "additional_settings": {},
                "brightness": null,
                "contrast": null,
                "device_type": "Monitor",
                "height": 1536,
                "manufacturer": {
                    "abbreviation": null,
                    "name": "LG",
                    "registry": {
                        "abbreviation": "ROR",
                        "name": "Research Organization Registry"
                    },
                    "registry_identifier": "02b948n83"
                },
                "model": "LG LP097QX1",
                "name": "Screen Right",
                "notes": null,
                "path_to_cad": null,
                "port_index": null,
                "position": null,
                "refresh_rate": 60,
                "serial_number": null,
                "size_unit": "pixel",
                "viewing_distance": "17.5",
                "viewing_distance_unit": "centimeter",
                "width": 2048
            }
        ]
    },
    "schema_version": "1.1.1",
    "session": {
   "active_mouse_platform": true,
   "anaesthesia": null,
   "animal_weight_post": null,
   "animal_weight_prior": null,
   "calibrations": [
      {
         "calibration_date": "2024-10-24T00:00:00-07:00",
         "description": "Calibration of the water valve delivery system",
         "device_name": "WaterValve",
         "input": {
            "measurements": [
               {
                  "repeat_count": 200,
                  "valve_open_interval": 0.5,
                  "valve_open_time": 0.03,
                  "water_weight": [
                     0.37
                  ]
               },
               {
                  "repeat_count": 200,
                  "valve_open_interval": 0.5,
                  "valve_open_time": 0.04,
                  "water_weight": [
                     0.52
                  ]
               },
               {
                  "repeat_count": 200,
                  "valve_open_interval": 0.5,
                  "valve_open_time": 0.05,
                  "water_weight": [
                     0.61
                  ]
               },
               {
                  "repeat_count": 200,
                  "valve_open_interval": 0.5,
                  "valve_open_time": 0.08,
                  "water_weight": [
                     0.86
                  ]
               },
               {
                  "repeat_count": 200,
                  "valve_open_interval": 0.5,
                  "valve_open_time": 0.1,
                  "water_weight": [
                     1.13
                  ]
               },
               {
                  "repeat_count": 200,
                  "valve_open_interval": 0.5,
                  "valve_open_time": 0.2,
                  "water_weight": [
                     2.63
                  ]
               },
               {
                  "repeat_count": 200,
                  "valve_open_interval": 0.5,
                  "valve_open_time": 0.3,
                  "water_weight": [
                     3.96
                  ]
               }
            ]
         },
         "notes": null,
         "output": {
            "interval_average": {
               "0.03": 0.00185,
               "0.04": 0.0026,
               "0.05": 0.0030499999999999998,
               "0.08": 0.0043,
               "0.1": 0.00565,
               "0.2": 0.01315,
               "0.3": 0.019799999999999998
            },
            "offset": -0.0004817532158170549,
            "r2": 0.9961947132634287,
            "slope": 0.06721534063839922,
            "valid_domain": [
               0.03,
               0.04,
               0.05,
               0.08,
               0.1,
               0.2,
               0.3
            ]
         }
      }
   ],
   "data_streams": [
      {
         "camera_names": [
            "FaceCamera",
            "SideCamera",
            "FrontCamera"
         ],
         "daq_names": [],
         "detectors": [],
         "ephys_modules": [],
         "fiber_connections": [],
         "fiber_modules": [],
         "light_sources": [],
         "manipulator_modules": [],
         "mri_scans": [],
         "notes": null,
         "ophys_fovs": [],
         "slap_fovs": [],
         "software": [],
         "stack_parameters": null,
         "stick_microscopes": [],
         "stream_end_time": "2025-06-17T21:19:53.564840Z",
         "stream_modalities": [
            {
               "abbreviation": "behavior",
               "name": "Behavior"
            },
            {
               "abbreviation": "behavior-videos",
               "name": "Behavior videos"
            }
         ],
         "stream_start_time": "2025-06-17T19:56:42.796923Z"
      }
   ],
   "describedBy": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/session.py",
   "experimenter_full_name": [
      "Huy"
   ],
   "headframe_registration": null,
   "iacuc_protocol": null,
   "maintenance": [],
   "mouse_platform_name": "wheel",
   "notes": "",
   "protocol_id": [],
   "reward_consumed_total": null,
   "reward_consumed_unit": "milliliter",
   "reward_delivery": {
      "notes": null,
      "reward_solution": "Water",
      "reward_spouts": [
         {
            "side": "Center",
            "starting_position": {
               "device_axes": [
                  {
                     "direction": "Left",
                     "name": "X"
                  },
                  {
                     "direction": "Front",
                     "name": "Y"
                  },
                  {
                     "direction": "Top",
                     "name": "Z"
                  }
               ],
               "device_origin": "Manipulator home",
               "device_position_transformations": [
                  {
                     "translation": [
                        "14.0",
                        "20.0",
                        "13.5"
                     ],
                     "type": "translation"
                  }
               ],
               "notes": null
            },
            "variable_position": true
         }
      ]
   },
   "rig_id": "426_4C_20250612",
   "schema_version": "1.1.2",
   "session_end_time": "2025-06-17T21:19:53.564840Z",
   "session_start_time": "2025-06-17T19:56:42.796923Z",
   "session_type": "AindVrForaging",
   "stimulus_epochs": [
      {
         "light_source_config": [],
         "notes": null,
         "objects_in_arena": null,
         "output_parameters": {},
         "reward_consumed_during_epoch": null,
         "reward_consumed_unit": "microliter",
         "script": {
            "name": "vr-foraging",
            "parameters": {
               "description": "",
               "name": "AindVrForaging",
               "stage_name": "control",
               "task_parameters": {
                  "aind_behavior_services_pkg_version": "0.10.2",
                  "environment": {
                     "blocks": [
                        {
                           "end_conditions": [],
                           "environment_statistics": {
                              "first_state_occupancy": [
                                 1,
                                 0,
                                 0
                              ],
                              "patches": [
                                 {
                                    "label": "PatchA",
                                    "odor_specification": {
                                       "concentration": 1,
                                       "index": 1
                                    },
                                    "reward_specification": {
                                       "delay": {
                                          "distribution_parameters": {
                                             "family": "Normal",
                                             "mean": 0.5,
                                             "std": 0.15
                                          },
                                          "family": "Normal",
                                          "scaling_parameters": {
                                             "offset": 0,
                                             "scale": 1
                                          },
                                          "truncation_parameters": {
                                             "is_truncated": true,
                                             "max": 1,
                                             "min": 0
                                          }
                                       },
                                       "operant_logic": {
                                          "grace_distance_threshold": 10,
                                          "is_operant": false,
                                          "stop_duration": 0.3,
                                          "time_to_collect_reward": 100000
                                       },
                                       "reward_function": {
                                          "amount": {
                                             "function_type": "ConstantFunction",
                                             "value": 5
                                          },
                                          "available": {
                                             "function_type": "ConstantFunction",
                                             "value": 1000
                                          },
                                          "depletion_rule": "OnReward",
                                          "probability": {
                                             "a": 0.6,
                                             "b": 2.718281828459045,
                                             "c": -0.1284,
                                             "d": 0,
                                             "function_type": "PowerFunction",
                                             "maximum": 0.6,
                                             "minimum": 0
                                          }
                                       }
                                    },
                                    "state_index": 1,
                                    "virtual_site_generation": {
                                       "inter_patch": {
                                          "label": "InterPatch",
                                          "length_distribution": {
                                             "distribution_parameters": {
                                                "family": "Scalar",
                                                "value": 350
                                             },
                                             "family": "Scalar",
                                             "scaling_parameters": null,
                                             "truncation_parameters": null
                                          },
                                          "render_specification": {
                                             "contrast": 1
                                          },
                                          "treadmill_specification": {
                                             "friction": {
                                                "distribution_parameters": {
                                                   "family": "Scalar",
                                                   "value": 0
                                                },
                                                "family": "Scalar",
                                                "scaling_parameters": null,
                                                "truncation_parameters": null
                                             }
                                          }
                                       },
                                       "inter_site": {
                                          "label": "InterSite",
                                          "length_distribution": {
                                             "distribution_parameters": {
                                                "family": "Exponential",
                                                "rate": 0.05
                                             },
                                             "family": "Exponential",
                                             "scaling_parameters": {
                                                "offset": 0,
                                                "scale": 1
                                             },
                                             "truncation_parameters": {
                                                "is_truncated": true,
                                                "max": 100,
                                                "min": 20
                                             }
                                          },
                                          "render_specification": {
                                             "contrast": 0.5
                                          },
                                          "treadmill_specification": {
                                             "friction": {
                                                "distribution_parameters": {
                                                   "family": "Scalar",
                                                   "value": 0
                                                },
                                                "family": "Scalar",
                                                "scaling_parameters": null,
                                                "truncation_parameters": null
                                             }
                                          }
                                       },
                                       "post_patch": null,
                                       "reward_site": {
                                          "label": "RewardSite",
                                          "length_distribution": {
                                             "distribution_parameters": {
                                                "family": "Scalar",
                                                "value": 50
                                             },
                                             "family": "Scalar",
                                             "scaling_parameters": null,
                                             "truncation_parameters": null
                                          },
                                          "render_specification": {
                                             "contrast": 0.5
                                          },
                                          "treadmill_specification": {
                                             "friction": {
                                                "distribution_parameters": {
                                                   "family": "Scalar",
                                                   "value": 0
                                                },
                                                "family": "Scalar",
                                                "scaling_parameters": null,
                                                "truncation_parameters": null
                                             }
                                          }
                                       }
                                    }
                                 },
                                 {
                                    "label": "PatchB",
                                    "odor_specification": {
                                       "concentration": 1,
                                       "index": 2
                                    },
                                    "reward_specification": {
                                       "delay": {
                                          "distribution_parameters": {
                                             "family": "Normal",
                                             "mean": 0.5,
                                             "std": 0.15
                                          },
                                          "family": "Normal",
                                          "scaling_parameters": {
                                             "offset": 0,
                                             "scale": 1
                                          },
                                          "truncation_parameters": {
                                             "is_truncated": true,
                                             "max": 1,
                                             "min": 0
                                          }
                                       },
                                       "operant_logic": {
                                          "grace_distance_threshold": 10,
                                          "is_operant": false,
                                          "stop_duration": 0.3,
                                          "time_to_collect_reward": 100000
                                       },
                                       "reward_function": {
                                          "amount": {
                                             "function_type": "ConstantFunction",
                                             "value": 5
                                          },
                                          "available": {
                                             "function_type": "ConstantFunction",
                                             "value": 1000
                                          },
                                          "depletion_rule": "OnReward",
                                          "probability": {
                                             "a": 0.9,
                                             "b": 2.718281828459045,
                                             "c": -0.1284,
                                             "d": 0,
                                             "function_type": "PowerFunction",
                                             "maximum": 0.9,
                                             "minimum": 0
                                          }
                                       }
                                    },
                                    "state_index": 0,
                                    "virtual_site_generation": {
                                       "inter_patch": {
                                          "label": "InterPatch",
                                          "length_distribution": {
                                             "distribution_parameters": {
                                                "family": "Scalar",
                                                "value": 350
                                             },
                                             "family": "Scalar",
                                             "scaling_parameters": null,
                                             "truncation_parameters": null
                                          },
                                          "render_specification": {
                                             "contrast": 1
                                          },
                                          "treadmill_specification": {
                                             "friction": {
                                                "distribution_parameters": {
                                                   "family": "Scalar",
                                                   "value": 0
                                                },
                                                "family": "Scalar",
                                                "scaling_parameters": null,
                                                "truncation_parameters": null
                                             }
                                          }
                                       },
                                       "inter_site": {
                                          "label": "InterSite",
                                          "length_distribution": {
                                             "distribution_parameters": {
                                                "family": "Exponential",
                                                "rate": 0.05
                                             },
                                             "family": "Exponential",
                                             "scaling_parameters": {
                                                "offset": 0,
                                                "scale": 1
                                             },
                                             "truncation_parameters": {
                                                "is_truncated": true,
                                                "max": 100,
                                                "min": 20
                                             }
                                          },
                                          "render_specification": {
                                             "contrast": 0.5
                                          },
                                          "treadmill_specification": {
                                             "friction": {
                                                "distribution_parameters": {
                                                   "family": "Scalar",
                                                   "value": 0
                                                },
                                                "family": "Scalar",
                                                "scaling_parameters": null,
                                                "truncation_parameters": null
                                             }
                                          }
                                       },
                                       "post_patch": null,
                                       "reward_site": {
                                          "label": "RewardSite",
                                          "length_distribution": {
                                             "distribution_parameters": {
                                                "family": "Scalar",
                                                "value": 50
                                             },
                                             "family": "Scalar",
                                             "scaling_parameters": null,
                                             "truncation_parameters": null
                                          },
                                          "render_specification": {
                                             "contrast": 0.5
                                          },
                                          "treadmill_specification": {
                                             "friction": {
                                                "distribution_parameters": {
                                                   "family": "Scalar",
                                                   "value": 0
                                                },
                                                "family": "Scalar",
                                                "scaling_parameters": null,
                                                "truncation_parameters": null
                                             }
                                          }
                                       }
                                    }
                                 },
                                 {
                                    "label": "PatchC",
                                    "odor_specification": {
                                       "concentration": 1,
                                       "index": 0
                                    },
                                    "reward_specification": {
                                       "delay": {
                                          "distribution_parameters": {
                                             "family": "Normal",
                                             "mean": 0.5,
                                             "std": 0.15
                                          },
                                          "family": "Normal",
                                          "scaling_parameters": {
                                             "offset": 0,
                                             "scale": 1
                                          },
                                          "truncation_parameters": {
                                             "is_truncated": true,
                                             "max": 1,
                                             "min": 0
                                          }
                                       },
                                       "operant_logic": {
                                          "grace_distance_threshold": 10,
                                          "is_operant": false,
                                          "stop_duration": 0.3,
                                          "time_to_collect_reward": 100000
                                       },
                                       "reward_function": {
                                          "amount": {
                                             "function_type": "ConstantFunction",
                                             "value": 0
                                          },
                                          "available": {
                                             "function_type": "ConstantFunction",
                                             "value": 1000
                                          },
                                          "depletion_rule": "OnReward",
                                          "probability": {
                                             "a": 0,
                                             "b": 2.718281828459045,
                                             "c": 0,
                                             "d": 0,
                                             "function_type": "PowerFunction",
                                             "maximum": 0,
                                             "minimum": 0
                                          }
                                       }
                                    },
                                    "state_index": 2,
                                    "virtual_site_generation": {
                                       "inter_patch": {
                                          "label": "InterPatch",
                                          "length_distribution": {
                                             "distribution_parameters": {
                                                "family": "Scalar",
                                                "value": 350
                                             },
                                             "family": "Scalar",
                                             "scaling_parameters": null,
                                             "truncation_parameters": null
                                          },
                                          "render_specification": {
                                             "contrast": 1
                                          },
                                          "treadmill_specification": {
                                             "friction": {
                                                "distribution_parameters": {
                                                   "family": "Scalar",
                                                   "value": 0
                                                },
                                                "family": "Scalar",
                                                "scaling_parameters": null,
                                                "truncation_parameters": null
                                             }
                                          }
                                       },
                                       "inter_site": {
                                          "label": "InterSite",
                                          "length_distribution": {
                                             "distribution_parameters": {
                                                "family": "Exponential",
                                                "rate": 0.05
                                             },
                                             "family": "Exponential",
                                             "scaling_parameters": {
                                                "offset": 0,
                                                "scale": 1
                                             },
                                             "truncation_parameters": {
                                                "is_truncated": true,
                                                "max": 100,
                                                "min": 20
                                             }
                                          },
                                          "render_specification": {
                                             "contrast": 0.5
                                          },
                                          "treadmill_specification": {
                                             "friction": {
                                                "distribution_parameters": {
                                                   "family": "Scalar",
                                                   "value": 0
                                                },
                                                "family": "Scalar",
                                                "scaling_parameters": null,
                                                "truncation_parameters": null
                                             }
                                          }
                                       },
                                       "post_patch": null,
                                       "reward_site": {
                                          "label": "RewardSite",
                                          "length_distribution": {
                                             "distribution_parameters": {
                                                "family": "Scalar",
                                                "value": 50
                                             },
                                             "family": "Scalar",
                                             "scaling_parameters": null,
                                             "truncation_parameters": null
                                          },
                                          "render_specification": {
                                             "contrast": 0.5
                                          },
                                          "treadmill_specification": {
                                             "friction": {
                                                "distribution_parameters": {
                                                   "family": "Scalar",
                                                   "value": 0
                                                },
                                                "family": "Scalar",
                                                "scaling_parameters": null,
                                                "truncation_parameters": null
                                             }
                                          }
                                       }
                                    }
                                 }
                              ],
                              "transition_matrix": [
                                 [
                                    0.4,
                                    0.4,
                                    0.2
                                 ],
                                 [
                                    0.4,
                                    0.4,
                                    0.2
                                 ],
                                 [
                                    0.4,
                                    0.4,
                                    0.2
                                 ]
                              ]
                           }
                        }
                     ],
                     "sampling_mode": "Random"
                  },
                  "operation_control": {
                     "audio_control": {
                        "duration": 0.2,
                        "frequency": 5000
                     },
                     "movable_spout_control": {
                        "enabled": false,
                        "retracting_distance": 2000,
                        "time_to_collect_after_reward": 1
                     },
                     "odor_control": {
                        "target_odor_flow": 100,
                        "target_total_flow": 1000,
                        "use_channel_3_as_carrier": true,
                        "valve_max_open_time": 10
                     },
                     "position_control": {
                        "frequency_filter_cutoff": 5,
                        "gain": {
                           "x": 1,
                           "y": 1,
                           "z": 1
                        },
                        "initial_position": {
                           "x": 0,
                           "y": 2.56,
                           "z": 0
                        },
                        "velocity_threshold": 10
                     }
                  },
                  "rng_seed": null,
                  "task_mode_settings": {
                     "task_mode": "FORAGING"
                  },
                  "updaters": {}
               },
               "version": "0.5.2"
            },
            "url": "https://github.com/AllenNeuralDynamics/Aind.Behavior.VrForaging.git/blob/bb13d656228013394baed1dc9949b9a306029af8/src\\vr-foraging.bonsai",
            "version": "bb13d656228013394baed1dc9949b9a306029af8"
         },
         "session_number": null,
         "software": [
            {
               "name": "Bonsai",
               "parameters": {
                  "AForge": "2.2.5",
                  "AForge.Video": "2.2.5",
                  "AForge.Video.DirectShow": "2.2.5",
                  "AllenNeuralDynamics.AindBehaviorServices": "0.10.2",
                  "AllenNeuralDynamics.AindManipulator": "0.1.6",
                  "AllenNeuralDynamics.Core": "0.4.0",
                  "AllenNeuralDynamics.Core.Design": "0.2.3",
                  "AllenNeuralDynamics.EnvironmentSensor": "0.3.0",
                  "AllenNeuralDynamics.HarpUtils": "0.3.2",
                  "AllenNeuralDynamics.LicketySplit": "0.2.0",
                  "AllenNeuralDynamics.SniffDetector": "0.2.0",
                  "AllenNeuralDynamics.Treadmill": "0.2.0",
                  "AllenNeuralDynamics.VersionControl": "0.1.1",
                  "AllenNeuralDynamics.WhiteRabbit": "0.2.0",
                  "AssimpNet": "4.1.0",
                  "BonVision": "0.11.0",
                  "Bonsai": "2.8.5",
                  "Bonsai.Audio": "2.8.0",
                  "Bonsai.Core": "2.8.5",
                  "Bonsai.Design": "2.8.5",
                  "Bonsai.Design.Visualizers": "2.8.0",
                  "Bonsai.Dsp": "2.8.1",
                  "Bonsai.Dsp.Design": "2.8.0",
                  "Bonsai.Editor": "2.8.5",
                  "Bonsai.Gui": "0.1.0",
                  "Bonsai.Gui.ZedGraph": "0.1.0",
                  "Bonsai.Harp": "3.5.2",
                  "Bonsai.Harp.Design": "3.5.0",
                  "Bonsai.Numerics": "0.9.0",
                  "Bonsai.Player": "2.8.5",
                  "Bonsai.Scripting.Expressions": "2.8.0",
                  "Bonsai.Scripting.Expressions.Design": "2.8.0",
                  "Bonsai.Shaders": "0.27.0",
                  "Bonsai.Shaders.Design": "0.27.0",
                  "Bonsai.Shaders.Rendering": "0.3.1",
                  "Bonsai.Spinnaker": "0.7.1",
                  "Bonsai.System": "2.8.1",
                  "Bonsai.System.Design": "2.8.0",
                  "Bonsai.VR": "0.6.0",
                  "Bonsai.Video": "2.4.0",
                  "Bonsai.Video.Design": "2.4.0",
                  "Bonsai.Vision": "2.8.1",
                  "Bonsai.Vision.Design": "2.8.1",
                  "Bonsai.Windows.Input": "2.7.0",
                  "Harp.AnalogInput": "0.2.0",
                  "Harp.Behavior": "0.1.0",
                  "Harp.LoadCells": "0.2.0",
                  "Harp.Olfactometer": "0.2.0",
                  "Harp.StepperDriver": "0.3.0",
                  "LibGit2Sharp": "0.27.2",
                  "LibGit2Sharp.NativeBinaries": "2.0.320",
                  "Markdig": "0.18.1",
                  "MathNet.Numerics": "4.15.0",
                  "Microsoft.Web.WebView2": "1.0.1823.32",
                  "Newtonsoft.Json": "13.0.3",
                  "OpenCV.Net": "3.4.2",
                  "OpenTK": "3.1.0",
                  "OpenTK.GLControl": "3.1.0",
                  "Rx-Core": "2.2.5",
                  "Rx-Interfaces": "2.2.5",
                  "Rx-Linq": "2.2.5",
                  "Rx-PlatformServices": "2.2.5",
                  "SvgNet": "3.3.3",
                  "System.Buffers": "4.5.1",
                  "System.Collections.Immutable": "8.0.0",
                  "System.Linq.Dynamic": "1.0.7",
                  "System.Memory": "4.5.5",
                  "System.Numerics.Vectors": "4.5.0",
                  "System.Resources.Extensions": "8.0.0",
                  "System.Runtime.CompilerServices.Unsafe": "6.0.0",
                  "YamlDotNet": "16.0.0",
                  "ZedGraph": "5.1.7",
                  "jacobslusser.ScintillaNET": "3.6.3",
                  "openal.redist": "2.0.7"
               },
               "url": "https://github.com/AllenNeuralDynamics/Aind.Behavior.VrForaging.git/blob/bb13d656228013394baed1dc9949b9a306029af8/bonsai",
               "version": "https://github.com/AllenNeuralDynamics/Aind.Behavior.VrForaging.git/blob/bb13d656228013394baed1dc9949b9a306029af8/bonsai/Bonsai.config"
            },
            {
               "name": "Python",
               "parameters": {
                  "Flask": "3.1.1",
                  "GitPython": "3.1.44",
                  "Jinja2": "3.1.6",
                  "MarkupSafe": "3.0.2",
                  "PyYAML": "6.0.2",
                  "Pygments": "2.19.1",
                  "Werkzeug": "3.1.3",
                  "aind-behavior-curriculum": "0.0.33",
                  "aind-behavior-experiment-launcher": "0.4.2",
                  "aind-behavior-services": "0.10.2",
                  "aind-behavior-vr-foraging": "0.5.2",
                  "aind-codeocean-pipeline-monitor": "0.7.2",
                  "aind-data-schema": "1.4.0",
                  "aind-data-schema-models": "0.7.5",
                  "aind-data-transfer-models": "0.17.1",
                  "aind-metadata-mapper": "0.25.0",
                  "aind-slims-api": "0.1.23",
                  "aind-slurm-rest": "0.2.0",
                  "aind-watchdog-service": "0.1.5",
                  "annotated-types": "0.7.0",
                  "blinker": "1.9.0",
                  "certifi": "2025.4.26",
                  "charset-normalizer": "3.4.2",
                  "click": "8.1.8",
                  "codeocean": "0.5.0",
                  "colorama": "0.4.6",
                  "dataclasses-json": "0.6.7",
                  "deprecation": "2.1.0",
                  "dnspython": "2.7.0",
                  "email_validator": "2.2.0",
                  "gitdb": "4.0.12",
                  "harp-python": "0.4.1",
                  "idna": "3.10",
                  "importlib_resources": "6.5.2",
                  "itsdangerous": "2.2.0",
                  "joblib": "1.5.0",
                  "markdown-it-py": "3.0.0",
                  "marshmallow": "3.26.1",
                  "mdurl": "0.1.2",
                  "mypy_extensions": "1.1.0",
                  "numpy": "2.2.6",
                  "oauthlib": "3.2.2",
                  "packaging": "25.0",
                  "pandas": "2.2.3",
                  "pydantic": "2.11.4",
                  "pydantic-settings": "2.9.1",
                  "pydantic_core": "2.33.2",
                  "pydantic_yaml": "1.4.0",
                  "python-dateutil": "2.9.0.post0",
                  "python-dotenv": "1.1.0",
                  "pytz": "2025.2",
                  "requests": "2.32.3",
                  "requests-oauthlib": "2.0.0",
                  "requests-toolbelt": "1.0.0",
                  "rich": "14.0.0",
                  "ruamel.yaml": "0.18.10",
                  "ruamel.yaml.clib": "0.2.12",
                  "scikit-learn": "1.6.1",
                  "scipy": "1.15.3",
                  "semver": "3.0.4",
                  "six": "1.17.0",
                  "slims-python-api": "7.2.0",
                  "smmap": "5.0.2",
                  "threadpoolctl": "3.6.0",
                  "typing-inspect": "0.9.0",
                  "typing-inspection": "0.4.0",
                  "typing_extensions": "4.13.2",
                  "tzdata": "2025.2",
                  "urllib3": "2.4.0"
               },
               "url": "https://github.com/AllenNeuralDynamics/Aind.Behavior.VrForaging.git/blob/bb13d656228013394baed1dc9949b9a306029af8",
               "version": "https://github.com/AllenNeuralDynamics/Aind.Behavior.VrForaging.git/blob/bb13d656228013394baed1dc9949b9a306029af8/pyproject.toml"
            }
         ],
         "speaker_config": {
            "name": "Speaker",
            "volume": "60",
            "volume_unit": "decibels"
         },
         "stimulus_device_names": [
            "harp_olfactometer",
            "speaker",
            "screen"
         ],
         "stimulus_end_time": "2025-06-17T21:19:53.564840Z",
         "stimulus_modalities": [
            "Olfactory",
            "Auditory",
            "Visual",
            "Virtual reality",
            "Wheel friction"
         ],
         "stimulus_name": "AindVrForaging",
         "stimulus_parameters": [
            {
               "channels": [
                  {
                     "channel_index": 0,
                     "notes": null,
                     "odorant": "Methyl Butyrate",
                     "odorant_dilution": "10.0",
                     "odorant_dilution_unit": "% v/v"
                  },
                  {
                     "channel_index": 1,
                     "notes": null,
                     "odorant": "Alpha-pinene",
                     "odorant_dilution": "10.0",
                     "odorant_dilution_unit": "% v/v"
                  },
                  {
                     "channel_index": 2,
                     "notes": null,
                     "odorant": "Fenchone",
                     "odorant_dilution": "10.0",
                     "odorant_dilution_unit": "% v/v"
                  }
               ],
               "notes": null,
               "stimulus_name": "Olfactory",
               "stimulus_type": "Olfactory Stimulation"
            },
            {
               "amplitude_modulation_frequency": null,
               "bandpass_filter_type": null,
               "bandpass_high_frequency": null,
               "bandpass_low_frequency": null,
               "bandpass_order": null,
               "frequency_unit": "hertz",
               "notes": null,
               "sample_frequency": "0",
               "stimulus_name": "Beep",
               "stimulus_type": "Auditory Stimulation"
            },
            {
               "notes": null,
               "stimulus_name": "VrScreen",
               "stimulus_parameters": {},
               "stimulus_template_name": [],
               "stimulus_type": "Visual Stimulation"
            }
         ],
         "stimulus_start_time": "2025-06-17T19:56:42.796923Z",
         "trials_finished": null,
         "trials_rewarded": null,
         "trials_total": null
      }
   ],
   "subject_id": "789911",
   "weight_unit": "gram"
},
    "subject": {
        "alleles": [],
        "background_strain": null,
        "breeding_info": null,
        "date_of_birth": "2024-12-17",
        "describedBy": "https://raw.githubusercontent.com/AllenNeuralDynamics/aind-data-schema/main/src/aind_data_schema/core/subject.py",
        "genotype": "wt/wt",
        "housing": {
            "cage_id": "8289241",
            "cohoused_subjects": [],
            "home_cage_enrichment": [],
            "light_cycle": null,
            "room_id": "221"
        },
        "notes": null,
        "restrictions": null,
        "rrid": null,
        "schema_version": "1.0.2",
        "sex": "Female",
        "source": {
            "abbreviation": null,
            "name": "Other",
            "registry": null,
            "registry_identifier": null
        },
        "species": {
            "name": "Mus musculus",
            "registry": {
                "abbreviation": "NCBI",
                "name": "National Center for Biotechnology Information"
            },
            "registry_identifier": "NCBI:txid10090"
        },
        "subject_id": "789911",
        "wellness_reports": []
    }
}